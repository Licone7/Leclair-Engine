/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

sourceCompatibility = 17
targetCompatibility = 17
description = "Leclair Engine"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy:3.0.9'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // LWJGL
	implementation platform("org.lwjgl:lwjgl-bom:3.3.1")
	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-assimp"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-shaderc"
	implementation "org.lwjgl:lwjgl-stb"
	implementation "org.lwjgl:lwjgl-vulkan"
	// LINUX X64
	runtimeOnly "org.lwjgl:lwjgl::natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-linux"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-linux"
	// LINUX ARM64
	runtimeOnly "org.lwjgl:lwjgl::natives-linux-arm64"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-linux-arm64"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-linux-arm64"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-linux-arm64"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-linux-arm64"
	// LINUX ARM32
	runtimeOnly "org.lwjgl:lwjgl::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-linux-arm32"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-linux-arm32"
	// MACOS X64
	runtimeOnly "org.lwjgl:lwjgl::natives-macos"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-macos"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-macos"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-macos"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-macos"
	runtimeOnly "org.lwjgl:lwjgl-vulkan::natives-macos"
	// MACOS ARM64
	runtimeOnly "org.lwjgl:lwjgl::natives-macos-arm64"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-macos-arm64"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-macos-arm64"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-macos-arm64"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-macos-arm64"
	runtimeOnly "org.lwjgl:lwjgl-vulkan::natives-macos-arm64"
	// WINDOWS X64
	runtimeOnly "org.lwjgl:lwjgl::natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-windows"
    // WINDOWS X86
	runtimeOnly "org.lwjgl:lwjgl::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-windows-x86"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-windows-x86"
	// WINDOWS ARM64
	runtimeOnly "org.lwjgl:lwjgl::natives-windows-arm64"
	runtimeOnly "org.lwjgl:lwjgl-assimp::natives-windows-arm64"
	runtimeOnly "org.lwjgl:lwjgl-openal::natives-windows-arm64"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::natives-windows-arm64"
	runtimeOnly "org.lwjgl:lwjgl-stb::natives-windows-arm64"

	implementation "org.joml:joml:1.10.1"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
